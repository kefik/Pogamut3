
	 	/**
         IMPORTANT !!!

         DO NOT EDIT THIS FILE. IT IS GENERATED FROM approriate xml file in xmlresources/gbcommands BY
         THE JavaClassesGenerator.xslt. MODIFY THAT FILE INSTEAD OF THIS ONE.
         
         Use Ant task process-gb-messages after that to generate .java files again.
         
         IMPORTANT END !!!
        */
 	package cz.cuni.amis.pogamut.ut2004.communication.messages.gbcommands;import java.util.*;import javax.vecmath.*;import cz.cuni.amis.pogamut.base.communication.messages.*;import cz.cuni.amis.pogamut.base.communication.worldview.*;import cz.cuni.amis.pogamut.base.communication.worldview.event.*;import cz.cuni.amis.pogamut.base.communication.worldview.object.*;import cz.cuni.amis.pogamut.multi.communication.worldview.object.*;import cz.cuni.amis.pogamut.base.communication.translator.event.*;import cz.cuni.amis.pogamut.multi.communication.translator.event.*;import cz.cuni.amis.pogamut.base3d.worldview.object.*;import cz.cuni.amis.pogamut.base3d.worldview.object.event.*;import cz.cuni.amis.pogamut.ut2004.communication.messages.*;import cz.cuni.amis.pogamut.ut2004.communication.worldview.objects.*;import cz.cuni.amis.pogamut.ut2004multi.communication.worldview.objects.*;import cz.cuni.amis.pogamut.ut2004.communication.translator.itemdescriptor.*;import cz.cuni.amis.pogamut.ut2004.communication.messages.ItemType.Category;import cz.cuni.amis.pogamut.unreal.communication.messages.UnrealId;import cz.cuni.amis.utils.exception.*;import cz.cuni.amis.pogamut.base.communication.translator.event.IWorldObjectUpdateResult.Result;import cz.cuni.amis.utils.SafeEquals;import cz.cuni.amis.pogamut.base.agent.*;import cz.cuni.amis.pogamut.multi.agent.*;import cz.cuni.amis.pogamut.multi.communication.worldview.property.*;import cz.cuni.amis.pogamut.ut2004multi.communication.worldview.property.*;import cz.cuni.amis.utils.token.*;import cz.cuni.amis.utils.*;
 		/**
 		 * Representation of the GameBots2004 command CONFGAME.
 		 *
 		 * 
		Configures various attributes of the game.
    
         */
 	public class GameConfiguration 
		extends CommandMessage
	        {
	        	
		        
    	/** Example how the message looks like - used during parser tests. */
    	public static final String PROTOTYPE =
    		" {Restart False}  {GameMessage text}  {GameMessageTime 0} ";
    
		/**
		 * Creates new instance of command GameConfiguration.
		 * 
		Configures various attributes of the game.
    
		 * Corresponding GameBots message for this command is
		 * CONFGAME.
		 *
		 * 
		 *    @param Restart 
		When set to true, the game state will be restarted (all scores reset to
                0 and all players and bots will be restarted). This does not affect
                Unreal native bots! Note that the restart is then announced by GameRestarted message and when finished
                another GameRestarted message is sent to mark the end.
        
		 *    @param GameMessage 
		Message that will be displayed in the middle of the HUD.
        
		 *    @param GameMessageTime 
		Time the displayed message will stay on the HUD.
        
		 */
		public GameConfiguration(
			Boolean Restart,  String GameMessage,  Double GameMessageTime
		) {
			
				this.Restart = Restart;
            
				this.GameMessage = GameMessage;
            
				this.GameMessageTime = GameMessageTime;
            
		}

		
			/**
			 * Creates new instance of command GameConfiguration.
			 * 
		Configures various attributes of the game.
    
			 * Corresponding GameBots message for this command is
			 * CONFGAME.
			 * <p></p>
			 * WARNING: this is empty-command constructor, you have to use setters to fill it up with data that should be sent to GameBots2004!
		     */
		    public GameConfiguration() {
		    }
			
		
		/**
		 * Cloning constructor.
		 *
		 * @param original
		 */
		public GameConfiguration(GameConfiguration original) {
		   
		        this.Restart = original.Restart;
		   
		        this.GameMessage = original.GameMessage;
		   
		        this.GameMessageTime = original.GameMessageTime;
		   
		}
    
	        /**
	        
		When set to true, the game state will be restarted (all scores reset to
                0 and all players and bots will be restarted). This does not affect
                Unreal native bots! Note that the restart is then announced by GameRestarted message and when finished
                another GameRestarted message is sent to mark the end.
         
	        */
	        protected
	         Boolean Restart =
	       	
	        		null
	        	;
	
	        
	        
 		/**
         * 
		When set to true, the game state will be restarted (all scores reset to
                0 and all players and bots will be restarted). This does not affect
                Unreal native bots! Note that the restart is then announced by GameRestarted message and when finished
                another GameRestarted message is sent to mark the end.
         
         */
        public Boolean isRestart()
 	
	        {
	            return
	        	 Restart;
	        }
	        
	        
	        
 		
 		/**
         * 
		When set to true, the game state will be restarted (all scores reset to
                0 and all players and bots will be restarted). This does not affect
                Unreal native bots! Note that the restart is then announced by GameRestarted message and when finished
                another GameRestarted message is sent to mark the end.
         
         */
        public GameConfiguration 
        setRestart(Boolean Restart)
 	
			{
				this.Restart = Restart;
				return this;
			}
		
	        /**
	        
		Message that will be displayed in the middle of the HUD.
         
	        */
	        protected
	         String GameMessage =
	       	
	        		null
	        	;
	
	        
	        
 		/**
         * 
		Message that will be displayed in the middle of the HUD.
         
         */
        public String getGameMessage()
 	
	        {
	            return
	        	 GameMessage;
	        }
	        
	        
	        
 		
 		/**
         * 
		Message that will be displayed in the middle of the HUD.
         
         */
        public GameConfiguration 
        setGameMessage(String GameMessage)
 	
			{
				this.GameMessage = GameMessage;
				return this;
			}
		
	        /**
	        
		Time the displayed message will stay on the HUD.
         
	        */
	        protected
	         Double GameMessageTime =
	       	
	        		null
	        	;
	
	        
	        
 		/**
         * 
		Time the displayed message will stay on the HUD.
         
         */
        public Double getGameMessageTime()
 	
	        {
	            return
	        	 GameMessageTime;
	        }
	        
	        
	        
 		
 		/**
         * 
		Time the displayed message will stay on the HUD.
         
         */
        public GameConfiguration 
        setGameMessageTime(Double GameMessageTime)
 	
			{
				this.GameMessageTime = GameMessageTime;
				return this;
			}
		
 	    public String toString() {
            return toMessage();
        }
 	
 		public String toHtmlString() {
			return super.toString() + "[<br/>" +
            	
            	"<b>Restart</b> = " +
            	String.valueOf(isRestart()
 	) +
            	" <br/> " +
            	
            	"<b>GameMessage</b> = " +
            	String.valueOf(getGameMessage()
 	) +
            	" <br/> " +
            	
            	"<b>GameMessageTime</b> = " +
            	String.valueOf(getGameMessageTime()
 	) +
            	" <br/> " +
            	 
            	"<br/>]"
            ;
		}
 	
		public String toMessage() {
     		StringBuffer buf = new StringBuffer();
     		buf.append("CONFGAME");
     		
						if (Restart != null) {
							buf.append(" {Restart " + Restart + "}");
						}
					
						if (GameMessage != null) {
							buf.append(" {GameMessage " + GameMessage + "}");
						}
					
						if (GameMessageTime != null) {
							buf.append(" {GameMessageTime " + GameMessageTime + "}");
						}
					
   			return buf.toString();
   		}
 	
 		// --- Extra Java from XML BEGIN (extra/code/java)
        	
		// --- Extra Java from XML END (extra/code/java)
 	
	        }
    	