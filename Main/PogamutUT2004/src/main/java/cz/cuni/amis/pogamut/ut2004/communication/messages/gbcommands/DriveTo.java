
	 	/**
         IMPORTANT !!!

         DO NOT EDIT THIS FILE. IT IS GENERATED FROM approriate xml file in xmlresources/gbcommands BY
         THE JavaClassesGenerator.xslt. MODIFY THAT FILE INSTEAD OF THIS ONE.
         
         Use Ant task process-gb-messages after that to generate .java files again.
         
         IMPORTANT END !!!
        */
 	package cz.cuni.amis.pogamut.ut2004.communication.messages.gbcommands;import java.util.*;import javax.vecmath.*;import cz.cuni.amis.pogamut.base.communication.messages.*;import cz.cuni.amis.pogamut.base.communication.worldview.*;import cz.cuni.amis.pogamut.base.communication.worldview.event.*;import cz.cuni.amis.pogamut.base.communication.worldview.object.*;import cz.cuni.amis.pogamut.multi.communication.worldview.object.*;import cz.cuni.amis.pogamut.base.communication.translator.event.*;import cz.cuni.amis.pogamut.multi.communication.translator.event.*;import cz.cuni.amis.pogamut.base3d.worldview.object.*;import cz.cuni.amis.pogamut.base3d.worldview.object.event.*;import cz.cuni.amis.pogamut.ut2004.communication.messages.*;import cz.cuni.amis.pogamut.ut2004.communication.worldview.objects.*;import cz.cuni.amis.pogamut.ut2004multi.communication.worldview.objects.*;import cz.cuni.amis.pogamut.ut2004.communication.translator.itemdescriptor.*;import cz.cuni.amis.pogamut.ut2004.communication.messages.ItemType.Category;import cz.cuni.amis.pogamut.unreal.communication.messages.UnrealId;import cz.cuni.amis.utils.exception.*;import cz.cuni.amis.pogamut.base.communication.translator.event.IWorldObjectUpdateResult.Result;import cz.cuni.amis.utils.SafeEquals;import cz.cuni.amis.pogamut.base.agent.*;import cz.cuni.amis.pogamut.multi.agent.*;import cz.cuni.amis.pogamut.multi.communication.worldview.property.*;import cz.cuni.amis.pogamut.ut2004multi.communication.worldview.property.*;import cz.cuni.amis.utils.token.*;import cz.cuni.amis.utils.*;
 		/**
 		 * Representation of the GameBots2004 command DRIVETO.
 		 *
 		 * 
		Only command that is able to move vehicles. Turn towards target 
		specified and move directly to its destination. If there is
		an obstacle between target and current position, you will hit it on
		your way to target (no obstacle avoidance).
	
         */
 	public class DriveTo 
		extends CommandMessage
	        {
	        	
		        
    	/** Example how the message looks like - used during parser tests. */
    	public static final String PROTOTYPE =
    		" {Target unreal_id} ";
    
		/**
		 * Creates new instance of command DriveTo.
		 * 
		Only command that is able to move vehicles. Turn towards target 
		specified and move directly to its destination. If there is
		an obstacle between target and current position, you will hit it on
		your way to target (no obstacle avoidance).
	
		 * Corresponding GameBots message for this command is
		 * DRIVETO.
		 *
		 * 
		 *    @param Target 
			The unique id of a NavPoint, Mover or item (beware, not all of the items
			have unique id). Recommended is to specify NavPoint Id as it is always unique.
			Won't work with player IDs.
		
		 */
		public DriveTo(
			UnrealId Target
		) {
			
				this.Target = Target;
            
		}

		
			/**
			 * Creates new instance of command DriveTo.
			 * 
		Only command that is able to move vehicles. Turn towards target 
		specified and move directly to its destination. If there is
		an obstacle between target and current position, you will hit it on
		your way to target (no obstacle avoidance).
	
			 * Corresponding GameBots message for this command is
			 * DRIVETO.
			 * <p></p>
			 * WARNING: this is empty-command constructor, you have to use setters to fill it up with data that should be sent to GameBots2004!
		     */
		    public DriveTo() {
		    }
			
		
		/**
		 * Cloning constructor.
		 *
		 * @param original
		 */
		public DriveTo(DriveTo original) {
		   
		        this.Target = original.Target;
		   
		}
    
	        /**
	        
			The unique id of a NavPoint, Mover or item (beware, not all of the items
			have unique id). Recommended is to specify NavPoint Id as it is always unique.
			Won't work with player IDs.
		 
	        */
	        protected
	         UnrealId Target =
	       	
	        		null
	        	;
	
	        
	        
 		/**
         * 
			The unique id of a NavPoint, Mover or item (beware, not all of the items
			have unique id). Recommended is to specify NavPoint Id as it is always unique.
			Won't work with player IDs.
		 
         */
        public UnrealId getTarget()
 	
	        {
	            return
	        	 Target;
	        }
	        
	        
	        
 		
 		/**
         * 
			The unique id of a NavPoint, Mover or item (beware, not all of the items
			have unique id). Recommended is to specify NavPoint Id as it is always unique.
			Won't work with player IDs.
		 
         */
        public DriveTo 
        setTarget(UnrealId Target)
 	
			{
				this.Target = Target;
				return this;
			}
		
 	    public String toString() {
            return toMessage();
        }
 	
 		public String toHtmlString() {
			return super.toString() + "[<br/>" +
            	
            	"<b>Target</b> = " +
            	String.valueOf(getTarget()
 	) +
            	" <br/> " +
            	 
            	"<br/>]"
            ;
		}
 	
		public String toMessage() {
     		StringBuffer buf = new StringBuffer();
     		buf.append("DRIVETO");
     		
						if (Target != null) {
							buf.append(" {Target " + Target.getStringId() + "}");
						}
					
   			return buf.toString();
   		}
 	
 		// --- Extra Java from XML BEGIN (extra/code/java)
        	
		// --- Extra Java from XML END (extra/code/java)
 	
	        }
    	